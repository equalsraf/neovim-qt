jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        sudo add-apt-repository -y ppa:neovim-ppa/stable
        sudo apt update -y
        sudo apt install -y libqt5svg5-dev neovim ninja-build qt5-default
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DCMAKE_BUILD_TYPE=Debug $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build
  - job: Apple
    pool:
      vmImage: 'macOS-latest'
    steps:
    - script: brew install msgpack neovim ninja qt5
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DUSE_SYSTEM_MSGPACK=OFF -DCMAKE_BUILD_TYPE=Debug $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build
  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'
      displayName: Setup Python
    - script: |
        cinst --no-progress -y 7zip neovim
        pip install aqtinstall
        cd $(Build.BinariesDirectory)
        python -m aqt install 5.12.1 windows desktop win64_msvc2017_64
      displayName: Install Dependencies
    - powershell: |
        Write-Host "##vso[task.setvariable variable=PATH;]${env:PATH};C:\tools\neovim\Neovim\bin";
      displayName: Add Neovim to PATH
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)\Qt5.12.1\5.12.1\msvc2017_64 $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build
