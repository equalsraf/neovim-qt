jobs:
  - job: Linux_GCC
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        sudo add-apt-repository -y ppa:neovim-ppa/stable
        sudo apt update -y
        sudo apt install -y libqt5svg5-dev neovim ninja-build qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DCMAKE_BUILD_TYPE=Debug $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build


  - job: UbuntuFocal
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - script: |
        sudo add-apt-repository -y ppa:neovim-ppa/stable
        sudo apt update -y
        sudo apt install -y libqt5svg5-dev neovim ninja-build qt5-default
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DCMAKE_BUILD_TYPE=Debug $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build


  - job: Apple_qt5
    pool:
      vmImage: 'macOS-latest'
    steps:
    - script: brew install msgpack neovim ninja qt@5
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DUSE_SYSTEM_MSGPACK=OFF -DCMAKE_BUILD_TYPE=Debug \
          -DQT_DIR=/usr/local/opt/qt@5/lib/cmake/Qt5 \
          -DQt5_DIR=/usr/local/opt/qt@5/lib/cmake/Qt5 \
          $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build


  - job: Apple_qt6
    pool:
      vmImage: 'macOS-latest'
    steps:
    - script: brew install msgpack neovim ninja qt6
      displayName: Install Dependencies
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -GNinja -DUSE_SYSTEM_MSGPACK=OFF -DCMAKE_BUILD_TYPE=Debug -DWITH_QT=Qt6 $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build


  - job: Windows_qt5
    variables:
      VCINSTALLDIR: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        architecture: 'x64'
      displayName: Setup Python
    - script: |
        choco install --no-progress -y 7zip neovim
        pip install aqtinstall
        cd $(Build.BinariesDirectory)
        python -m aqt install 5.15.0 windows desktop win64_msvc2019_64
      displayName: Install Dependencies
    - powershell: |
        Write-Host "##vso[task.setvariable variable=PATH;]${env:PATH};C:\tools\neovim\nvim-win64\bin";
      displayName: Add Neovim to PATH
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)\5.15.0\msvc2019_64\lib\cmake;$(Build.BinariesDirectory)\5.15.0\msvc2019_64\bin $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build

  - job: Windows_qt6
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        architecture: 'x64'
      displayName: Setup Python
    - script: |
        choco install --no-progress -y 7zip neovim
        pip install aqtinstall
        cd $(Build.BinariesDirectory)
        python -m aqt install 6.0.0 windows desktop win64_msvc2019_64
      displayName: Install Dependencies
    - powershell: |
        Write-Host "##vso[task.setvariable variable=PATH;]${env:PATH};C:\tools\neovim\nvim-win64\bin";
      displayName: Add Neovim to PATH
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Debug -DWITH_QT=Qt6 -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)\6.0.0\msvc2019_64\lib\cmake;$(Build.BinariesDirectory)\6.0.0\msvc2019_64\bin $(Build.SourcesDirectory)
      displayName: CMake Configure
    - task: CMake@1
      inputs:
        workingDirectory: $(Build.BinariesDirectory)
        cmakeArgs: --build .
      displayName: CMake Build
